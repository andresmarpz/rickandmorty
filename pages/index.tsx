import { styled } from '@/stitches.config';
import type { GetStaticProps, NextPage } from 'next';
import Head from 'next/head';

import { getCharacters, getEpisodes, getLocations } from 'rickmortyapi';

import Box from '@/components/Box';
import Gallery from '@/components/Gallery';
import Header from '@/components/Header';
import Separator from '@/components/Separator';
import MagnifyingGlass from '@/components/svgs/MagnifyingGlass';
import Spinner from '@/components/svgs/Spinner';
import { useRouter } from 'next/router';
import { FormEvent, useState } from 'react';
import type { Character, Episode, Location } from 'rickmortyapi/dist/interfaces';

const Section = styled('section', {
    position: 'relative',
    display: 'flex',
    justifyContent: 'center',

    backgroundImage: "url('/assets/images/rick-morty.png')",
    backgroundRepeat: 'no-repeat',
    backgroundSize: 'cover',
    marginX: '12%',
    paddingBottom: '65%',
    height: 0,
    textAlign: 'center'
});

export const getStaticProps: GetStaticProps = async () => {
    const characters = await getCharacters();
    const locations = await getLocations();
    const episodes = await getEpisodes();

    return {
        props: {
            characters: characters.data.results,
            locations: locations.data.results,
            episodes: episodes.data.results
        }
    };
};

const Form = styled('form', {
    position: 'relative',
    backgroundColor: '#fff',
    display: 'flex',
    alignItems: 'center',
    padding: '20px 12px',
    border: '1px solid $gray4',
    borderRadius: 6,

    variants: {
        focus: {
            true: {
                boxShadow: 'hsl(0, 0%, 0%) 0px 0px 0px 1.5px'
            },
            false: {
                outline: 'none'
            }
        },
        disabled: {
            true: {
                backgroundColor: '$gray2'
            },
            false: {
                backgroundColor: '#fff'
            }
        }
    }
});

const Search = styled('input', {
    fontSize: 16,
    padding: 8,
    border: 'none',
    marginLeft: 4,
    '&:focus': {
        outline: 'none'
    },
    '&:disabled': {
        backgroundColor: '$gray2'
    }
});
interface Props {
    characters: Character[];
    locations: Location[];
    episodes: Episode[];
}

const Home: NextPage<Props> = ({ ...props }: Props) => {
    const [loading, setLoading] = useState<boolean>(false);
    const [search, setSearch] = useState<string>('');
    const [focus, setFocus] = useState<boolean>(false);
    const router = useRouter();

    const handleSearch = async (event: FormEvent<HTMLFormElement>) => {
        setLoading(true);
        event.preventDefault();
        if (!search.length) return;

        router.push(`/search?text=${search}`);
    };

    return (
        <>
            <Head>
                <title>Rick & Morty</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main>
                <Header />
                <Section>
                    <Form onSubmit={(e) => handleSearch(e)} focus={focus} disabled={loading}>
                        <MagnifyingGlass />
                        <Search
                            placeholder="Search.."
                            disabled={loading}
                            type="text"
                            value={search}
                            onChange={(e) => setSearch(e.target.value)}
                            onFocus={() => setFocus(true)}
                            onBlur={() => setFocus(false)}
                        />
                        {loading && (
                            <Box
                                css={{
                                    display: 'flex',
                                    justifyContent: 'center',
                                    alignItems: 'center',
                                    position: 'absolute',
                                    top: '0',
                                    left: '0',
                                    width: '100%',
                                    height: '100%'
                                }}>
                                <Spinner />
                            </Box>
                        )}
                    </Form>
                </Section>
                <Separator css={{ marginTop: 0 }} />

                <section>
                    <h1 style={{ textAlign: 'center' }}>Gallery</h1>
                    <Gallery initialProps={props} />
                </section>
            </main>
        </>
    );
};

export default Home;
