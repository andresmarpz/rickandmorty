import Box from "@/components/Box";
import CharacterCard from "@/components/CharacterCard";
import Layout from "@/components/Layout";
import { useEffectOnce } from "@/hooks/useEffectOnce";
import { getCharacters, Response } from "@/lib/fetch";
import type { GetStaticProps, NextPage } from "next";
import Head from "next/head";
import { useCallback, useEffect, useState } from "react";

import useSWR from "swr";

export const getStaticProps: GetStaticProps = async (context) => {
	const initialProps = await getCharacters();

	return {
		props: {
			initialProps,
		},
	};
};

interface Props {
	initialProps: Response;
}

const Home: NextPage<Props> = ({ initialProps }) => {
	const [page, setPage] = useState(1);
	const [mounted, setMounted] = useState(false);
	const [currentData, setCurrentData] = useState<Response | undefined>(initialProps);

	useEffectOnce(() => setMounted(true));

	// always try to have the next page ready
	const { data, error, mutate } = useSWR("/api/characters", async () => {
		return await getCharacters(page + 1);
	});

	const fetchNewPage = useCallback(async () => {
		// save the current data since SWR has the next page data
		// and fetch the new one, then mutate SWR data
		setCurrentData(data);
		const newData = await getCharacters(page + 1);
		mutate(newData, false);
	}, [page, mutate]);

	useEffect(() => {
		if (!mounted) return;
		fetchNewPage();
	}, [page, fetchNewPage]);

	if (error) return <div>Error loading.</div>;

	return (
		<Layout>
			<Head>
				<title>Rick & Morty</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<Box>
				<h1>Rick and Morty</h1>
				<hr />
				Characters: Page {page}
				<Box
					css={{
						display: "flex",
						flexWrap: "wrap",
						gap: 8,
						margin: "auto",
					}}>
					{currentData?.results.map((character) => (
						<CharacterCard key={character.id} character={character} />
					))}
				</Box>
				<button onClick={() => setPage((page) => page + 1)}>Next Page</button>
			</Box>
		</Layout>
	);
};

export default Home;
